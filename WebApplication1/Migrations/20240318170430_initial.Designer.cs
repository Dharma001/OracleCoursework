// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using app.appDbContext;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(applicationContext))]
    [Migration("20240318170430_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AnswerId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<DateTime>("AnswerDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AnswerDate");

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("AnswerText");

                    b.Property<int>("InstructorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("InstructorId");

                    b.Property<int>("QuestionId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QuestionId");

                    b.HasKey("AnswerId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("WebApplication1.Models.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ContentId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("ContentTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("ContentTitle");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("ContentType");

                    b.Property<string>("ContentUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("ContentUrl");

                    b.Property<int>("CourseId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    b.Property<int>("LessonNo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LessonNo");

                    b.HasKey("ContentId");

                    b.HasIndex("LessonNo", "CourseId");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("CourseTitle");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("Description");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("DATE")
                        .HasColumnName("Duration");

                    b.Property<int>("InstructorId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("InstructorId");

                    b.HasKey("CourseId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("WebApplication1.Models.Enrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("StudentId");

                    b.Property<int>("CourseId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("EnrollDate")
                        .HasColumnType("DATE")
                        .HasColumnName("EnrollDate");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("WebApplication1.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("InstructorId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("InstructorName");

                    b.HasKey("InstructorId");

                    b.ToTable("Instructor");
                });

            modelBuilder.Entity("WebApplication1.Models.Lesson", b =>
                {
                    b.Property<int>("LessonNo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LessonNo");

                    b.Property<int>("CourseId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("DATE")
                        .HasColumnName("Duration");

                    b.Property<string>("LessonTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("LessonTitle");

                    b.HasKey("LessonNo", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("WebApplication1.Models.Progress", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("StudentId");

                    b.Property<int>("CourseId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    b.Property<int>("LessonNo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LessonNo");

                    b.Property<DateTime?>("LastAccess")
                        .HasColumnType("DATE")
                        .HasColumnName("LastAccess");

                    b.Property<bool>("LessonStatus")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("LessonStatus");

                    b.HasKey("StudentId", "CourseId", "LessonNo");

                    b.HasIndex("LessonNo", "CourseId");

                    b.ToTable("Progress");
                });

            modelBuilder.Entity("WebApplication1.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("QuestionId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CourseId");

                    b.Property<int>("LessonNo")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LessonNo");

                    b.Property<DateTime>("QuestionDate")
                        .HasColumnType("DATE")
                        .HasColumnName("QuestionDate");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("QuestionText");

                    b.Property<int>("StudentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("StudentId");

                    b.HasKey("QuestionId");

                    b.HasIndex("StudentId");

                    b.HasIndex("LessonNo", "CourseId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("WebApplication1.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("StudentId");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("Contact");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("Country");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("DATE")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR2")
                        .HasColumnName("LastName");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.Answer", b =>
                {
                    b.HasOne("WebApplication1.Models.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Answer_Instructor");

                    b.HasOne("WebApplication1.Models.Question", "Question")
                        .WithMany("Answer")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Answer_Question");

                    b.Navigation("Instructor");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("WebApplication1.Models.Content", b =>
                {
                    b.HasOne("WebApplication1.Models.Lesson", "Lesson")
                        .WithMany("Content")
                        .HasForeignKey("LessonNo", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Content_Lesson");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.HasOne("WebApplication1.Models.Instructor", "Instructor")
                        .WithMany("Course")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Course_Instructor");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("WebApplication1.Models.Enrollment", b =>
                {
                    b.HasOne("WebApplication1.Models.Course", "Course")
                        .WithMany("Enrollment")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Enrollment_Course");

                    b.HasOne("WebApplication1.Models.Student", "Student")
                        .WithMany("Enrollment")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Enrollment_Student");

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.Lesson", b =>
                {
                    b.HasOne("WebApplication1.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Lesson_Course");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("WebApplication1.Models.Progress", b =>
                {
                    b.HasOne("WebApplication1.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Progress_Student");

                    b.HasOne("WebApplication1.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonNo", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Progress_Lesson");

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.Question", b =>
                {
                    b.HasOne("WebApplication1.Models.Student", "Student")
                        .WithMany("Questions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Question_Student");

                    b.HasOne("WebApplication1.Models.Lesson", "Lesson")
                        .WithMany("Questions")
                        .HasForeignKey("LessonNo", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Question_Lesson");

                    b.Navigation("Lesson");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplication1.Models.Course", b =>
                {
                    b.Navigation("Enrollment");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("WebApplication1.Models.Instructor", b =>
                {
                    b.Navigation("Course");
                });

            modelBuilder.Entity("WebApplication1.Models.Lesson", b =>
                {
                    b.Navigation("Content");

                    b.Navigation("Questions");
                });

            modelBuilder.Entity("WebApplication1.Models.Question", b =>
                {
                    b.Navigation("Answer");
                });

            modelBuilder.Entity("WebApplication1.Models.Student", b =>
                {
                    b.Navigation("Enrollment");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
